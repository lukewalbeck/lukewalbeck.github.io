{"version":3,"sources":["components/NewAbout.js","utils/API.js","components/Projects.js","components/Skills.js","components/BlogCard.js","Home.js","components/Header.js","serviceWorker.js","components/ProjectJump.js","components/BlogJump.js","index.js","media/USD.jpg","media/bay.jpg","media/LukeWalbeckResume.pdf"],"names":["NewAbout","props","state","names","name","tick","fadeBool","this","Jumbotron","id","in","style","display","bgImage","bayImage","strength","big","usdImage","bottom","i","length","setState","setTimeout","nextName","setInterval","clearInterval","interval","React","Component","axios","create","baseURL","responseType","Projects","project","loaded","apiCall","margin","when","width","flexStyle","config","API","get","headers","data","arr","push","item","key","Project","Card","maxWidth","Img","variant","src","image","Body","Title","title","Text","overflow","height","description","Button","href","github","target","icon","flexWrap","Skills","pythonProgress","webProgress","cProgress","dbProgress","Container","Row","alignItems","Col","xs","sm","ProgressBar","now","label","pythonInterval","webInterval","cInterval","dbInterval","BlogCard","posts","Post","post","date","Date","updated_at","toLocaleDateString","content","library","add","fab","faEnvelope","Home","Header","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","resume","Boolean","window","location","hostname","match","ProjectJump","BlogJump","BlogEntry","Media","mediaStyle","alt","routing","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f8294ecd.chunk.js","sourcesContent":["import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport { Fade } from 'react-reveal';\nimport { Parallax } from 'react-parallax';\nimport usdImage from '../media/USD.jpg';\nimport bayImage from '../media/bay.jpg'\n\nclass NewAbout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            names: ['student-athlete.', 'software engineer.', 'teammate.', 'leader.'],\n            name: '',\n            tick: 0,\n            fadeBool: true,\n        };\n    }\n    render() {\n        const { name, fadeBool } = this.state;\n        return(\n            <div>\n                <Jumbotron id=\"Hello\">\n                    <h1>My name is Luke Walbeck and I am a <Fade in={fadeBool}><div style={{display: 'inline'}}>{name}</div></Fade></h1>\n                    <br></br>\n                </Jumbotron>\n                <Parallax bgImage={bayImage} strength={500}>\n                    <Fade big>\n                        <h1 id=\"USD\">I'm currently a software engineer at Cisco residing in the Bay Area.</h1>\n                    </Fade>\n                </Parallax>\n                <Parallax bgImage={usdImage} strength={500}>\n                    <Fade big>\n                        <h1 id=\"USD\">I graduated in May 2020 from the University of San Diego with a B.S. in Computer Science and a minor in Finance.</h1>\n                    </Fade>\n                </Parallax>\n                <Jumbotron>\n                    <Fade bottom>\n                        <h3>This is my personal website used for showcasing my personal projects and experiences. Feel free to contact me through my email, LinkedIn, or just explore my site!</h3>\n                    </Fade>\n                </Jumbotron>\n            </div>\n        );\n    }\n\n    nextName() {\n        const { names, tick } = this.state;\n        let i = tick;\n        if(i >= names.length) {\n            this.setState({tick: 0});\n            i = 0;        \n        }\n        setTimeout(() => {this.setState({fadeBool: false})}, 1000);\n        this.setState({name: names[i], fadeBool: true, tick: i+1});\n    }\n\n    componentDidMount() {\n        this.nextName();\n        setInterval(() => this.nextName(), 1500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n}\n\nexport default NewAbout;","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://lwalbeck.pythonanywhere.com/\",\n    responseType: \"json\"\n});","import React from 'react';\nimport API from '../utils/API';\nimport { Card, Button } from 'react-bootstrap';\nimport Fade from 'react-reveal/Fade';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Projects extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project: [],\n            loaded: false,\n            apiCall: props.apiCall\n        };\n    }\n    render() {\n        const { project, loaded } = this.state;\n        return (\n            <div>\n                {!loaded && <h2 style={{margin: '25px'}}>Loading Projects...</h2>}\n                <Fade when={loaded}>\n                    <h2 style={{ margin: '25px' }}>Projects</h2>\n                    <div style={{ width: '100%' }}>\n                        <div style={flexStyle}>{project}</div>\n                    </div>\n                </Fade>\n            </div>\n        );\n    }\n\n    async componentDidMount() {\n        let config = {'Authorization': 'Api-Key RYiV1aLG.LsqIQoRhrytrhPrJox96fWG3kSR8sCb3'}\n        let data = await API.get(this.state.apiCall, {headers: config});\n        let arr = [];\n        data = data.data;\n        for (var i = 0; i < data.length; i++) {\n            arr.push(<Project item={data[i]} key={i}></Project>);\n        }\n        this.setState({ project: arr, loaded: true });\n    }\n}\n\nclass Project extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: props.item,\n        };\n    }\n\n    render() {\n        const { item } = this.state;\n        return (\n            <Card style={{ maxWidth: '23rem', margin:'0 10px 10px 25px' }}>\n                <Card.Img variant=\"top\" src={item.image} />\n                <Card.Body>\n                    <Card.Title>{item.title}</Card.Title>\n                    <Card.Text style={{ overflow: 'auto', height: '12em'}}>\n                        {item.description}\n                    </Card.Text>\n                    <Button variant=\"outline-primary\" href={item.github} target=\"_blank\"><FontAwesomeIcon icon={['fab', 'github']}/></Button>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\n\nconst flexStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: '0 auto'\n};\n\n\nexport default Projects;","import React from 'react';\nimport ProgressBar from 'react-bootstrap/ProgressBar'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Fade from 'react-reveal';\n\nclass Skills extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            pythonProgress: 0,\n            webProgress: 0,\n            cProgress: 0,\n            dbProgress: 0,\n        };\n    }\n\n\n    render() {\n        const { pythonProgress, webProgress, cProgress, dbProgress } = this.state;\n        return(\n            <div style={{margin: '0 auto', width: '100%' }} id=\"skills\">\n                <Fade>\n                <h2 style={{ margin: '25px' }}>Skills</h2>\n                <Container style={{margin: '25px'}}>\n                    <Row style={{alignItems: 'center'}}>\n                        <Col xs={3}><h4>Python / Java / C#</h4></Col>\n                        <Col sm={8}><ProgressBar now={pythonProgress} label={'Experienced'} /></Col>    \n                    </Row>\n                    <Row style={{alignItems: 'center'}}>\n                        <Col xs={3}><h4>HTML / CSS / JS</h4></Col>\n                        <Col sm={8}><ProgressBar now={webProgress} label={'Proficient'} /></Col>    \n                    </Row> \n                    <Row style={{alignItems: 'center'}}>\n                        <Col xs={3}><h4>C / C++ / Swift</h4></Col>\n                        <Col sm={8}><ProgressBar now={cProgress} label={'Classroom'} /></Col>    \n                    </Row> \n                    <Row style={{alignItems: 'center'}}>\n                        <Col xs={3}><h4>SQL / mySQL</h4></Col>\n                        <Col sm={8}><ProgressBar now={dbProgress} label={'Comfortable'} /></Col>    \n                    </Row>     \n                </Container> \n                </Fade> \n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.pythonInterval = setInterval(() => {\n            this.setState({\n                pythonProgress: 90\n            })\n        }, 400)\n        this.webInterval = setInterval(() => {\n            this.setState({\n                webProgress: 75\n            })\n        }, 800)\n        this.cInterval = setInterval(() => {\n            this.setState({\n                cProgress: 60\n            })\n        }, 1200)\n        this.dbInterval = setInterval(() => {\n            this.setState({\n                dbProgress: 50\n            })\n        }, 1600)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.pythonInterval);\n        clearInterval(this.webInterval);\n        clearInterval(this.cInterval);\n        clearInterval(this.dbInterval);\n    }\n}\nexport default Skills;","import React from 'react';\nimport API from '../utils/API';\nimport Fade from 'react-reveal/Fade'\nimport { Card, Button } from 'react-bootstrap';\n\nclass BlogCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            loaded: false,\n            apiCall: props.apiCall\n        };\n    }\n    render() {\n        const { posts, loaded } = this.state;\n        return(\n            <div>\n                {!loaded && <h3>Loading Posts...</h3>}\n                <Fade when={loaded}>\n                    <div>\n                        <h2 style={{margin: '25px'}}>Blog</h2>\n                        <div>{posts}</div>\n                    </div>\n                </Fade>\n            </div>\n        );\n    }\n\n    async componentDidMount() {\n        let config = {'Authorization': 'Api-Key RYiV1aLG.LsqIQoRhrytrhPrJox96fWG3kSR8sCb3'}\n        let data = await API.get(this.state.apiCall, {headers: config});\n        let arr = [];\n        data = data.data;\n        for (var i = 0; i < data.length; i++) {\n            arr.push(<Post item={data[i]} key={i}></Post>);\n        }\n        this.setState({ posts: arr, loaded: true });\n    }\n\n    componentWillUnmount() {\n        this.loaded = false;\n    }\n}\nexport default BlogCard;\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            post: props.item\n        }\n    }\n\n    render() {\n        const { post } = this.state;\n        var date = new Date(post.updated_at);\n        date = date.toLocaleDateString();\n        return(\n            <Card style={{ maxWidth: '25rem', margin:'0 25px 10px 25px' }}>\n                <Card.Img variant=\"top\" src={post.image} />\n                <Card.Body>\n                    <Card.Title>{post.title} - {date}</Card.Title>\n                    <Card.Text style={{ overflow: 'auto', height: '10em'}}>\n                        {post.content}\n                    </Card.Text>\n                    <Button variant=\"outline-primary\">\n                        Read More\n                    </Button>\n\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n","import React from 'react';\nimport NewAbout from './components/NewAbout';\n//import AboutMe from './components/AboutMe';\nimport Projects from './components/Projects';\nimport Skills from './components/Skills';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport BlogCard from './components/BlogCard';\n\nlibrary.add(fab, faEnvelope);\n\n\nclass Home extends React.Component {\n  render() {\n    return(\n      <div>\n        <NewAbout></NewAbout>\n        <Skills></Skills>\n        <Projects apiCall=\"/projects/\"/>\n        <BlogCard apiCall=\"/posts/\"/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Navbar, Nav, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport resume from '../media/LukeWalbeckResume.pdf'\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div id=\"home\">\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                    <Navbar.Brand href=\"#home\">Luke Walbeck</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\n                            <Nav.Link href=\"#projects\">Projects</Nav.Link>\n                            <Nav.Link href=\"#blog\">Blog</Nav.Link>\n                            <Nav.Link href={resume} target=\"_blank\">Resume</Nav.Link>\n                        </Nav>\n                        <Nav>\n                            <Nav.Link  href=\"https://github.com/lukewalbeck\" target=\"_blank\">                            \n                                <Button variant=\"outline-light\"><FontAwesomeIcon icon={['fab', 'github']}/></Button>\n                            </Nav.Link>\n                            <Nav.Link href=\"https://www.linkedin.com/in/lucas-walbeck/\" target=\"_blank\">\n                                <Button variant=\"outline-light\"><FontAwesomeIcon icon={['fab', 'linkedin-in']}/></Button>\n                            </Nav.Link>\n                            <Nav.Link href=\"mailto:lukewalbeck@gmail.com\" target=\"_blank\">\n                            <Button variant=\"outline-light\"><FontAwesomeIcon icon='envelope'/></Button>\n                            </Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n                    );\n                }\n            }\nexport default Header;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport Projects from './Projects';\n\n\nclass ProjectJump extends React.Component {\n    render() {\n        return(\n            <div>\n                <Jumbotron>\n                    <h2>Projects</h2>\n                    <hr/>\n                    <p>\n                        Here are a list of my projects that I have worked on or are still working on,\n                        with their individual github links. \n                    </p>\n                    <p>    \n                        This information is generated from the Django\n                        REST back-end that I have been developing, so it should be the most up-to-date information\n                        regarding my showcase of projects.\n                    </p>\n                </Jumbotron>\n\n\n                <Projects apiCall=\"/projects/\"/>\n            </div>\n        );\n    }\n}\nexport default ProjectJump;","import React from 'react';\nimport { Jumbotron, Media } from 'react-bootstrap';\nimport API from '../utils/API';\nimport Fade from 'react-reveal';\n\nclass BlogJump extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts: [],\n            loaded: false,\n            apiCall: props.apiCall\n        };\n    }\n\n    render() {\n        const { posts, loaded } = this.state;\n        return(\n            <div>\n                <Jumbotron>\n                    <h2>Blog</h2>\n                    <hr/>\n                    <p>\n                        Welcome to my blog! This is where I will be posting interesting finds that\n                        have helped me further develop this website!\n                    </p>\n                    <p>\n                        These posts are generated from the Django\n                        REST back-end that I have been developing, so it should be the most up-to-date information\n                        regarding my blog posts.\n                    </p>\n                </Jumbotron>\n                <div style={{margin:'25px'}} id=\"mediaContainer\">\n                    {!loaded && <h3>Loading Posts...</h3>}\n                    <Fade when={loaded}>\n                        <div>{posts}</div>\n                    </Fade>\n                </div>       \n            </div>\n        );\n    }\n\n    async componentDidMount() {\n        let config = {'Authorization': 'Api-Key RYiV1aLG.LsqIQoRhrytrhPrJox96fWG3kSR8sCb3'}\n        let data = await API.get(this.state.apiCall, {headers: config});\n        let arr = [];\n        data = data.data;\n        for (var i = 0; i < data.length; i++) {\n            arr.push(<BlogEntry item={data[i]} key={i}/>);\n        }\n        this.setState({ posts: arr, loaded: true });\n    }\n\n}\n\nclass BlogEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            post: props.item\n        }\n    }\n\n    render() {\n        const { post } = this.state;\n        var date = new Date(post.updated_at);\n        date = date.toLocaleDateString();\n        return(\n            <Media style={mediaStyle}>\n                <img\n                width={350}\n                className=\"mr-3\"\n                src={post.image}\n                alt=\"Placeholder\"\n                />\n                <Media.Body>\n                    <h2>{post.title}</h2>\n                    <h6>{date}</h6>\n                    <p>{post.content}</p>\n                </Media.Body>\n            </Media>\n        );\n    }\n}\nlet mediaStyle = {\n    display: 'flex',\n    flexWrap: 'wrap',\n}\n\nexport default BlogJump;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Home';\nimport Header from './components/Header';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport ProjectJump from './components/ProjectJump';\nimport BlogJump from './components/BlogJump';\n\n\nconst routing = (\n        <Router>\n            <Header/>\n            <Switch>\n                <Route exact path=\"/\" component={Home}></Route>\n                <Route path=\"/home\" component={Home}></Route>\n                <Route path=\"/projects\" component={ProjectJump}></Route>\n                <Route path=\"/blog\" component={() => <BlogJump apiCall='/posts/'/>}></Route>\n            </Switch>\n        </Router>\n)\n\n\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/USD.fb395a04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bay.8b99828f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LukeWalbeckResume.b49b4fe8.pdf\";"],"sourceRoot":""}